name: Deploy HRM to Server

on:
  push:
    branches: [feat/backend]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.4'

      - name: Install Composer dependencies
        run: composer install --no-interaction --prefer-dist --optimize-autoloader --no-dev

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'

      - name: Install NPM dependencies
        run: npm ci

      - name: Build NPM assets
        run: npm run build

      - name: Prepare server permissions
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            if [ ! -d /var/www/html/hrm ]; then
              mkdir -p /var/www/html/hrm
            fi
            cd /var/www/html/hrm
            sudo chown -R ${{ secrets.VPS_USER }}:www-data .
            sudo chmod -R 775 .

      - name: Synchronize Files To Server
        uses: easingthemes/ssh-deploy@v2.1.5
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          SOURCE: .
          REMOTE_HOST: ${{ secrets.VPS_HOST }}
          REMOTE_USER: ${{ secrets.VPS_USER }}
          EXCLUDE: '/node_modules/, /.git/'
        with:
          target: '/var/www/html/hrm'
          args: '-rltgoDzvO --delete'

      - name: Deploy to server
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd /var/www/html/hrm

            cp .env.example .env

            sed -i 's/APP_ENV=.*/APP_ENV=production/' .env
            sed -i 's|APP_URL=.*|APP_URL=${{ secrets.APP_URL }}|' .env
            sed -i 's/DB_HOST=.*/DB_HOST=localhost/' .env
            sed -i 's/DB_DATABASE=.*/DB_DATABASE=${{ secrets.DB_DATABASE }}/' .env
            sed -i 's/DB_USERNAME=.*/DB_USERNAME=${{ secrets.DB_USERNAME }}/' .env
            sed -i 's/DB_PASSWORD=.*/DB_PASSWORD=${{ secrets.DB_PASSWORD }}/' .env

            php artisan config:clear
            php artisan key:generate

            mkdir -p storage/framework/{sessions,views,cache}
            mkdir -p storage/logs
            mkdir -p bootstrap/cache
            php artisan migrate --force
            php artisan config:clear
            php artisan config:cache
            php artisan route:clear
            php artisan route:cache
            php artisan view:clear
            php artisan view:cache
            php artisan optimize
            php artisan storage:link || true
            sudo chown -R www-data:www-data storage bootstrap/cache public/build public/storage
            sudo chmod -R 775 storage bootstrap/cache public/build
            sudo chmod -R 775 public/storage
            sudo systemctl reload nginx
